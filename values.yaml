
development_mode_enabled: false

# -- The Route53 subdomain for the services on your cluster. It will be used as the suffix url for argocd, grafana, vault, and any other services that come out of the box in the glueops platform. Note: you need to create this before using this repo as this repo does not provision DNS Zones for you.
captain_domain: <cluster_env>.<yournamesgoeshere>.glueopshosted.rocks

glueops_alerts:
  # -- This is unique per cluster deployment. You can get these values from the terraform you use to get loki s3, vault backup, and certmanager creds.
  opsgenie_apikey: nil

# -- Configuration for backups taken by the GlueOps Platform
glueops_backups:
  # --  Credentials and configuration for backing up vault, values are generated by terraform-module-cloud-multy-prerequisites and are specific to this backup process, due to narrowly scoped permissions
  vault:
    aws_region: us-west-2
    aws_accessKey: XXXXXXXXXXXXXXXXXXXXXXXXXX
    aws_secretKey: XXXXXXXXXXXXXXXXXXXXXXXXXX
    cron_expression: "0 */6 * * *"
    company_key: <yournamesgoeshere>

gitHub:
  # -- create a Personal Access Token in github that has repo scope access. It would be best to use a service account for this otherwise all the comments on PR will be left in your name
  api_token: XXXXXXXXXXXXXXXXXXXXXXXXXX
  credentialTemplateUrl: "Z2l0QGdpdGh1Yi5jb20=" #git@github.com
  customer_github_org_and_team: "glueops-rocks:developers"
  # -- "git@github.com:GlueOps/test-customer-stack.git"
  tenant_application_stack_repo: "git@github.com:<your-org-name>/<your-repo-name>.git"
  # -- create a private key to access the application stack repository it and format using cat <key-file> | base64 | tr -d '\n'
  tenant_b64enc_ssh_private_key: XXXXXXXXXXXXXXXXXXXXXXXXXX

# -- Values are specific to externalDNS and generated by terraform-module-cloud-multy-prerequisites
externalDns:
  aws_accessKey: XXXXXXXXXXXXXXXXXXXXXXXXXX
  aws_secretKey: XXXXXXXXXXXXXXXXXXXXXXXXXX
  aws_region: us-west-2

certManager:
  # -- can be obtained for free with an account under zerossl.com. To retrieve these values, log in to the relevant zerossl account for your zone and navigate to the developer page. Note: For development, use a personal ZeroSSL account, and not a shared account - this avoids unintended consequences. Each customer will has a unique ZeroSSL account as well.
  zerossl_eab_hmac_key: XXXXXXXXXXXXXXXXXXXXXXXXXX
  # -- can be obtained for free with an account under zerossl.com. To retrieve these values, log in to the relevant zerossl account for your zone and navigate to the developer page. Note: For development, use a personal ZeroSSL account, and not a shared account - this avoids unintended consequences. Each customer will has a unique ZeroSSL account as well.
  zerossl_eab_kid: XXXXXXXXXXXXXXXXXXXXXXXXXX
  # -- Values are specific to certManager, due to narrowly scoped permissions, and are generated by terraform-module-cloud-multy-prerequisites.
  aws_accessKey: XXXXXXXXXXXXXXXXXXXXXXXXXX
  # -- Values are specific to certManager, due to narrowly scoped permissions, and are generated by terraform-module-cloud-multy-prerequisites.
  aws_secretKey: XXXXXXXXXXXXXXXXXXXXXXXXXX
  # -- Values are specific to certManager, due to narrowly scoped permissions, and are generated by terraform-module-cloud-multy-prerequisites.
  aws_region: us-west-2

vault:
  config:
    glues_env: nil

grafana:
  github_client_id: XXXXXXXXXXXXXXXXXXXXXXXXXX
  github_client_secret: XXXXXXXXXXXXXXXXXXXXXXXXXX
  github_admin_org_name: GlueOps
  github_admin_team_name: grafana_super_admins
  github_other_org_names: glueops-rocks
  loki_data_source_domain: 'http://loki-read.glueops-core-loki.svc.cluster.local:3100'

promtail:
  client_url: http://loki-write.glueops-core-loki.svc.cluster.local:3100/loki/api/v1/push

loki:
  bucket: XXXXXXXXXXXXXXXXXXXXXXXXXX
  aws_region: us-west-2
  aws_accessKey: XXXXXXXXXXXXXXXXXXXXXXXXXX
  aws_secretKey: XXXXXXXXXXXXXXXXXXXXXXXXXX

argo-cd:
  glueops:
    enabled: false
    github_client_id: nil
    github_client_secret: nil
    destination_cluster_for_core_apps: "in-cluster"
    ingress_controller_service_type: "LoadBalancer"
    ingress_controller_host_port_enabled: false

  redis-ha:
    enabled: true
  controller:
    replicas: 1
  repoServer:
    autoscaling:
      enabled: true
      minReplicas: 2
  applicationSet:
    replicaCount: 2
  server:
    autoscaling:
      enabled: true
      minReplicas: 2
    config:
      exec.enabled: "true"
      application.resourceTrackingMethod: "annotation+label"
      resource.customizations.health.argoproj.io_Application: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            if obj.status.health.message ~= nil then
              hs.message = obj.status.health.message
            end
          end
        end
        return hs
      resource.customizations.health.external-secrets.io_ExternalSecret: |
        hs = {}
        hs.status = "Healthy"
        return hs
      url: "https://argocd.<cluster_env>.<yournamesgoeshere>.glueopshosted.rocks"
      dex.config: |
        connectors:
          - type: github
            id: github
            name: GitHub
            config:
              clientID: XXXXXXXXXXXXXXXXXXXXXXXXXX
              clientSecret: XXXXXXXXXXXXXXXXXXXXXXXXXX
              orgs:
              - name: GlueOps
              - name: glueops-rocks
              loadAllGroups: true
    rbacConfig:
      policy.csv: |
        g, GlueOps:argocd_super_admins, role:admin
        g, glueops-rocks:developers, role:developers
        p, role:developers, clusters, get, *, allow
        p, role:developers, *, get, development, allow
        p, role:developers, repositories, *, development/*, allow
        p, role:developers, applications, *, development/*, allow
        p, role:developers, exec, *, development/*, allow
    extraArgs:
      - --insecure
    service:
      type: ClusterIP
    ingress:
      hosts: ["argocd.<cluster_env>.<yournamesgoeshere>.glueopshosted.rocks"]
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "internal-ingress-nginx"
